class(a)=="Date"
sum(a)
rm(both.dates)
rm(both.cols)
rm(x.Date)
rm(x1)
rm(x2)
rm(x1.)
rm(x)
savehistory(hydro1.Rhistory)
savehistory("D:/Ascem/data/precipitation/hydro1history.Rhistory")
lvec1 <- rep(c(TRUE, FALSE, NA), times=3)
lvec1
lvec2 <- rep(c(TRUE, FALSE, NA), each=3)
lvec2
lvec1 & lvec2
lvec1 | lvec2
FALSE | NA
library(maptools)
install.packages(rgeos)
install.packages("rgeos")
library(maptools)
install.packages("HydroMe")
library(HydroMe)
fix(dates)
save.image("D:/Ascem/data/precipitation/rain23.RData")
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
aiken1<-read.table("Aiken5SE_1940_1966.txt",header=1,sep="\t")
edisto<-read.tale("Edisto_discharge.csv",header=1,sep=",")
edisto<-read.table("Edisto_discharge.csv",header=1,sep=",")
?xts
??xts
library(zoo)
edisto2<-read.zoo("Edisto_discharge.csv", format = "%m/%d/%Y", sep=",", header=TRUE)
library(xts)
edisto1<-apply.monthly(edisto2,"sum")
fix(edisto1)
View(aiken1)
26 % 12
26%12
26/12
1 %/% .2
26 %% 12
-1 %% 12
plot(edisto1)
plot(aiken11)
plot(aiken1)
a<-as.yearmon(aiken1$YEAR+aiken1$MONTH/12)
a
a<-as.yearmon(aiken1$YEAR+(aiken1$MONTH-1)/12)
a
aiken<-aiken1
aiken$Date<-a
edisto3<-as.xts(edisto1)
fix(edisto1)
fix(edisto1)
write.csv(edisto3, file="edisto3.csv")
View(edisto)
edisto$discharge2-edisto$discharge*86400*.3048^3
edisto$discharge2<-edisto$discharge*86400*.3048^3
View(edisto)
edisto2*2
ed<-edisto2*86400*.3048^3
View(aiken1)
View(aiken)
View(aiken1)
View(aiken)
ed2<-as.xts(ed)
ed1<-apply.monthly(ed2,"sum")
write.csv(ed1, file="edi1.csv")
write.csv(reclass(ed1), file="edi1.csv")
aiken$ppt<-aiken$Total*0.0254
fix(ed1)
area<-1612^2
ed3<-ed1/area
View(aiken)
aik1<-as.xts(aiken$ppt,aiken$Date)
plot(cumsum(aik1))
plot(cumsum(ed3),cumsum(aik1))
t.zoo<- merge(aik1,ed3,all=FALSE)
typeof(aik1)
plot(cumsum(ed3)
)
savehistory("D:/SRS/data_SRS/Hydrologie_calculs/hydrowork1edisto.Rhistory")
summary(ed3)
intersect(ed3$Index,aik1$Index)
summary(aik1)
fix(ed2)
ed4<-to.period(ed3,"months")
periodicity(aik1)
periodicity(ed3)
periodicity(ed4)
aik2<-as.data.frame(aik1)
edi2<-as.data.frame(ed3)
write.csv(aik1,file="aik1.csv")
write.csv(aik2,file="aik2.csv")
write.csv(edi2,file="edi2.csv")
View(edi2)
plot(ed3)
plot(ed2)
save.image("D:/SRS/data_SRS/Hydrologie_calculs/Edisto.RData")
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
load("D:/SRS/data_SRS/Hydrologie_calculs/Edisto.RData")
View(edisto)
setwd("D:/Ascem/water_level_meas")
wl<-read.table("aquifer_thickness.csv",sep=",",header=TRUE)
wl<-read.table("aquifer_thickness.csv",sep=",",header=TRUE)
wl<-read.table("aquifer_thickness.csv",sep=",",header=TRUE)
View(wl)
default.stringsAsFactors()
hist(wl$AQ_THICKNESS)
attach(wl)
tapply(AQ_THICKNESS,STATION_ID,mean)
tapply(AQ_THICKNESS,STATION_ID,sd)
boxplot(AQ_THICKNESS ~ STATION_ID)
text(STATION_ID, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0) , row.names(STATION_ID), cex=0.6, pos=4, col="red")
boxplot(AQ_THICKNESS ~ STATION_ID, horizontal=TRUE)
wl$AQ_THICKNESS[wl$AQ_THICKNESS<0]<-NA
boxplot(AQ_THICKNESS ~ STATION_ID, horizontal=TRUE)
detach(wl)
wl$AQ_THICKNESS[wl$AQ_THICKNESS<0]<-NA
attach(wl)
boxplot(AQ_THICKNESS ~ STATION_ID, horizontal=TRUE,na.omit)
boxplot(AQ_THICKNESS ~ STATION_ID, horizontal=TRUE)
boxplot(AQ_THICKNESS ~ STATION_ID, horizontal=TRUE,outline=FALSE)
detach(wl)
wl$date<-as.Date(wl$MEASUREMENT_DATE)
wl$date<-as.Date(wl$MEASUREMENT_DATE,format="%m/%d/%Y")
View(wl)
plot(wl$date,wl$AQ_THICKNESS~wl$STATION_ID)
plot(wl$date[wl$STATION_ID=="FSB 78"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB 78"])
plot(wl$date[wl$STATION_ID=="FSB 94D"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB 94D"])
plot(wl$date[wl$STATION_ID=="FSB 94DR"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB 94DR"])
plot(wl$date[wl$STATION_ID=="FSB 95DR"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB 95DR"])
plot(wl$date[wl$STATION_ID=="FSB 120D"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB 120D"])
plot(wl$date[wl$STATION_ID=="FSB 120D"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB 120D"])
plot(wl$date[wl$STATION_ID=="FSB120D"],wl$AQ_THICKNESS[wl$STATION_ID=="FS120D"])
plot(na.omit(wl$date[wl$STATION_ID=="FSB120D"]),na.omit(wl$AQ_THICKNESS[wl$STATION_ID=="FS120D"])
)
plot(na.omit(wl$date[wl$STATION_ID=="FSB120D"]),na.omit(wl$AQ_THICKNESS[wl$STATION_ID=="FS120D"]))
length(wl$date[wl$STATION_ID=="FSB120D"])
length(wl$AQ_THICKNESS[wl$STATION_ID=="FSB120D"])
plot(na.omit(wl$date[wl$STATION_ID=="FSB120D"]),na.omit(wl$AQ_THICKNESS[wl$STATION_ID=="FS120D"]))
plot(wl$date[wl$STATION_ID=="FSB120D"],wl$AQ_THICKNESS[wl$STATION_ID=="FS120D"])
plot(wl$date[wl$STATION_ID=="FSB120D"],wl$AQ_THICKNESS[wl$STATION_ID=="FSB120D"])
attach(wl)
boxplot(AQ_THICKNESS ~ STATION_ID, horizontal=TRUE)
load("D:/SRS/data_SRS/Hydrologie_calculs/Edisto.RData")
fix(edisto1)
sum(edisto3)
plot(edisto3)
plot(ed1)
plot(ed3)
sum(aik1)
View(aiken)
View(aiken1)
View(aiken)
a<-aiken$Total*.0254;
View(edi2)
b<-edi2$V1*86400*.304^3*30;
sum(a)-sum(b)/(198*1.612^2)
sum(a)-sum(b)/(198*1612^2)
library(xts)
library(zoo)
a1<-read.table("Aiken5SE_1940_1966.txt",header=1,sep="\t")
e1<-read.table("Edisto_discharge.csv",header=1,sep=",")
#edisto2<-read.zoo("Edisto_discharge.csv", format = "%m/%d/%Y", sep=",", header=TRUE)
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
a1<-read.table("Aiken5SE_1940_1966.txt",header=1,sep="\t")
e1<-read.table("Edisto_discharge.csv",header=1,sep=",")
View(`a1`)
a2<-a1$Total*.254;
sum(a1$Total(1:10))
sum(a1$Total[1:10])
sum(a1$Total[1:12])/1000
View(`e1`)
View(`e1`)
e2<-e1$discharge*86400*.3048^3/(198*1612^2);
a2<-a1$Total/1000
sum(a2)-sum(e2)
sum(a2)
sum(e2)
max(e2)
min(e2)
a2<-a1$Total*.000254
sum(a2)-sum(e2)
sum(a2)
sum(a2)/(1966-1940)
(sum(a2)-sum(e2))/(1966-1940)
(sum(a2)-sum(e2))/(1966-1939)
(sum(a2)-sum(e2))/(1966-1940)*(1/.0254)
((sum(a2)-sum(e2)/.0254)/(1966-1940))
((sum(a2)-sum(e2))/.0254)/(1966-1940))
(((sum(a2)-sum(e2))/.0254)/(1966-1940)
)
(((sum(a2)-sum(e2))/.0254)/(1966-1940))
sum(a2)/(1966-1940)/.0254
sum(e2)/(1966-1940)/.0254
57*.4
57*.75
library(zoo)
library(xts)
load("D:/SRS/data_SRS/Hydrologie_calculs/Edisto.RData")
ed5<-apply.yearly(ed3,sum)
plot(ed5)
aik5<-apply.yearly(aik1,sum)
plot(aik1)
plot(aik5)
aik5[1]
aik5[1,2]
aik5[1,1]
help(xts)
aik6<-as.data.frame(aik5)
View(aik6)
t1<-read.table("TC1.txt",header=1,sep="\t")
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
t1<-read.table("TC1.txt",header=1,sep="\t")
View(`t1`)
t2<-as.xts(t1)
View(aik6)
View(aik6)
ed6<-as.data.frame(ed5)
View(ed6)
View(ed6)
View(edi2)
View(edi2)
View(aik2)
save.image("D:/SRS/data_SRS/Hydrologie_calculs/TC.RData")
setwd("D:/LearningLanguages/R_proj/kriging2")
install.packages("gstat")
install.packages(c("date", "fields", "mapdata", "maps", "rgdal", "rgeos", "spatial", "zoo"))
library(gstat)
install.packages(c("gstat", "sp", "zoo", "xts"))
install.packages(c("maps", "MCMCpack", "spgrass6", "mapdata", "mapproj"))
setwd("D:/LearningLanguages/R_proj/kriging2")
library(gstat)
d <- read.csv('elev.csv')
e <- na.omit(d)
coordinates(e) <- ~ x+y
bubble(e, zcol='elev', fill=FALSE, do.sqrt=FALSE, maxsize=2)
x.range <- as.integer(range(e@coords[,1]))
y.range <- as.integer(range(e@coords[,2]))
grd <- expand.grid(x=seq(from=x.range[1], to=x.range[2], by=500), y=seq(from=y.range[1], to=y.range[2], by=500) )
coordinates(grd) <- ~ x+y
gridded(grd) <- TRUE
plot(grd, cex=0.5)
points(e, pch=1, col='red', cex=0.7)
title("Interpolation Grid and Sample Points")
g <- gstat(id="elev", formula=elev ~ 1, data=e)
plot(variogram(g, map=TRUE, cutoff=4000, width=200), threshold=10)
v <- variogram(g, alpha=c(0,45,90,135))
v.fit <- fit.variogram(v, model=vgm(model='Lin' , anis=c(0, 0.5)))
plot(v, model=v.fit, as.table=TRUE)
g <- gstat(g, id="elev", model=v.fit )
p <- predict(g, model=v.fit, newdata=grd)
par(mar=c(2,2,2,2))
image(p, col=terrain.colors(20))
contour(p, add=TRUE, drawlabels=FALSE, col='brown')
points(e, pch=4, cex=0.5)
title('OK Prediction')
pts <- list("sp.points", e, pch = 4, col = "black", cex=0.5)
spplot(p, zcol="elev.pred", col.regions=terrain.colors(20), cuts=19, sp.layout=list(pts), contour=TRUE, labels=FALSE, pretty=TRUE, col='brown', main='OK Prediction')
spplot(p, zcol='elev.var', col.regions=heat.colors(100), cuts=99, main='OK Variance',sp.layout=list(pts) )
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
setwd("D:/Ascem/data/precipitation")
raingauges<-read.table("rain_gages_coords.txt", sep='\t')
View(raingauges)
View(raingauges)
raingauges<-read.table("rain_gages_coords.txt", sep='\t',header=TRUE)
install.packages("kml")
library(kml)
install.packages("shapefiles")
install.packages("maptools")
install.packages("rgdal")
library(rgdal)
library(maptools)
gpclibPermit()
gpclibPermit()
gpclibPermit(TRUE)
gpclibPermit()<-TRUE
gpclibPermit()
install.packages("rgeos")
library(maptools)
head(raingauges)
coordinates(raingauges)<-c("Long","Lat")
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
load("D:/SRS/data_SRS/Hydrologie_calculs/TC.RData")
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
load("D:/SRS/data_SRS/Hydrologie_calculs/TC.RData")
fix(t.zoo)
rm(t.zoo)
t2<-read.zoo("TC1.txt",format = "%m/%d/%Y",header=TRUE,sep="\t")
library(xts)
t2<-read.zoo("TC1.txt",format = "%m/%d/%Y",header=TRUE,sep="\t")
t3<-as.xts(t2)
e2<-read.zoo("Edisto_discharge.csv"format = "%m/%d/%Y",header=TRUE,sep=",")
e2<-read.zoo("Edisto_discharge.csv",format = "%m/%d/%Y",header=TRUE,sep=",")
e3<-as.xts(e2)
t4<-apply.yearly(t3,sum)
e4<-apply.yearly(e3,sum)
t5<-as.data.frame(t4)
e5<-as.data.frame(e4)
View(`t5`)
write.csv(e5, file="Edito_annual.csv")
write.csv(t5, file="TC_annual.csv")
sum(!is.na(t3))
sum(is.na(t3))
t4b<-apply.monthly(t3,sum)
sum(is.na(t4b))
sum(!is.na(t4b))
t5b<-as.data.frame(t4b)
write.csv(t5b, file="TC_monthly.csv")
t2<-read.zoo("TC1.txt",format = "%m/%d/%Y",header=TRUE,sep="\t")
library(zoo)
library(xts)
t2<-read.zoo("TC1.txt",format = "%m/%d/%Y",header=TRUE,sep="\t")
t3<-as.xts(t2)
t3b<-as.xts(na.omit(t2))
setwd("D:/SRS/data_SRS/Hydrologie_calculs")
t2<-read.zoo("TC1.txt",format = "%m/%d/%Y",header=TRUE,sep="\t")
t3b<-as.xts(na.omit(t2))
t4b<-apply.yearly(t3b,sum)
fix(`t4b`)
fix(`t4b`)
t5b<-as.data.frame(t4b)
View(`t5b`)
View(`t5b`)
save.image("D:/SRS/data_SRS/Hydrologie_calculs/TC2.RData")
setwd("D:/LearningLanguages/R")
source('D:/LearningLanguages/R/monty.R')
source('D:/LearningLanguages/R/monty.R')
monty(strat="stay",N=10000)
monty(strat="switch",N=10000)
monty(strat="random",N=10000)
31+28+31+30+31+30+31+31+30+31+30+31
365.25/12
(108*365.25+30.4375*8+7)*86400
(108*365.24+30.4375*8+7)*86400
365.24/12
(108*365.24+30.43667*8+7)*86400
31+28+31+30+31+30+31+20+11
install.packages(c("ggplot2", "plyr", "reshape2", "stringr", "lubridate"))
install.packages(c("formatR", "googleVis", "gstat", "highlight", "knitr", "maps", "parser", "rworldmap", "sp", "spacetime", "spam"))
library(ggplot2)
qplot(mpg, wt, data = mtcars)
qplot(mpg, wt, data = mtcars, color = class)
library(ggplot2)
qplot(mpg, wt, data = mtcars, color = class)
qplot(mpg, hwy, data = mtcars)
library(ggplot2)
qplot(mpg, hwt, data = mtcars)
qplot(mpg, wt, data = mtcars)
?mpg
str(mpg)
summary(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = class)
qplot(displ, hwy, data = mpg, shape = class)
qplot(displ, hwy, data = mpg, size = cyl)
qplot(displ, hwy, data = mpg, shape = drv, color = drv)
qplot(displ, hwy, data =mpg) +
facet_grid(. ~ cyl)
qplot(displ, hwy, data =mpg) +
facet_grid(drv ~ .)
qplot(displ, hwy, data =mpg) +
facet_grid(drv ~ .)
qplot(displ, hwy, data =mpg) +
facet_grid(. ~ cyl)
qplot(displ, hwy, data =mpg) +
facet_grid(drv ~ cyl)
qplot(displ, hwy, data =mpg) +
facet_grid(. ~ cyl)
qplot(displ, hwy, data =mpg) +
facet_grid(~ class)
qplot(displ, hwy, data =mpg) +
facet_wrap(~ class)
qplot(cty, hwy, data =mpg)
qplot(cty, hwy, data =mpg, geom = "jitter")
qplot(class, hwy, data =mpg)
qplot(reorder(class, hwy), hwy, data =mpg)
qplot(reorder(class, hwy), hwy, data =mpg, geom = "boxplot")
qplot(reorder(class, hwy), hwy, data =mpg, geom = c("jitter","boxplot")
)
?reorder
qplot(reorder(class, hwy, FUN = median), hwy, data =mpg, geom = "boxplot")
qplot(reorder(class, hwy), hwy, data =mpg, geom = c("jitter","boxplot"))
qplot(reorder(class, hwy), hwy, data =mpg, geom = c("boxplot", "jitter"))
str(diamonds)
summary(diamonds)
head(diamonds)
qplot(cut, data = diamonds)
qplot(carat, data = diamonds, binwidth = 1)
qplot(carat, data = diamonds, binwidth = .1)
qplot(carat, data = diamonds, binwidth = .01)
qplot(carat, data = diamonds, binwidth = .01) +
xlim (0, 3)
qplot(depth, data = diamonds, binwidth = 0.2,
fill = cut) + xlim(55, 70)
qplot(price, color , data = diamonds)
qplot( color + cut,price , data = diamonds)
qplot( color,price , data = diamonds)
qplot(price , data = diamonds, fill = carat)
qplot(price , data = diamonds, binwidth = 0.2, fill = carat)
qplot(price , data = diamonds, binwidth = 0.2, fill = clarity)
qplot(price , data = diamonds, binwidth = 100, fill = clarity)
qplot(price , data = diamonds, binwidth = 50, fill = clarity) + xlim(2000,3000)
qplot(price , data = diamonds, binwidth = 50, fill = clarity) + xlim(1000,5000)
qplot(price , data = diamonds, binwidth = 50, fill = clarity) + xlim(1000,2000)
qplot(price, data = diamonds, binwidth) + facet_wrap(~ cut)
qplot(price, data = diamonds, binwidth = 200) + facet_wrap(~ cut)
qplot(price, data = diamonds, binwidth = 500,
geom = "freqpoly", colour = cut)
qplot(price, ..density.., binwidth = 500, geom = "freqpoly", colour = cut)
qplot(price, ..density.., , data = diamonds, binwidth = 500, geom = "freqpoly", colour = cut)
qplot(price, ..density.., data = diamonds, binwidth = 500, geom = "freqpoly", colour = cut)
install.packages("ggmaps");
install.packages("ggmap");
x <- c(0, 70, 140, 208, 268, 324, 370, 404, 430, 450, 468,
482, 496, 506,516, 523, 528, 533, 536, 542, 549, 558,
568, 581, 595, 613, 633, 659, 688, 722, 764, 810)
y <- seq(from=0, to=840, by=70)
m <- length(y)
n <- length(x)
z <- t(matrix(rep(c(0,1), m*n/2), nrow=m))
image(x[-n], y[-m], z[-n,-m], col=c("black", "white"),
axes=FALSE, xlab="", ylab="")
axes=FALSE, xlab="", ylab="")
pnorm(.975)
pnorm(.99)
qnorm(.99)
qnorm(.975)
pnorm(5)
pnorm(1.96)
full.data.stats <- with(ToothGrowth, c(mean=mean(len), sem=sd(len)/sqrt(length(len))))
m1 <- mean(ToothGrowth$len[ToothGrowth$supp=='OJ'])
s1 <- sd(ToothGrowth$len[ToothGrowth$supp=='OJ'])/sqrt(30)
m2 <- mean(ToothGrowth$len[ToothGrowth$supp=='VC'])
s2 <- sd(ToothGrowth$len[ToothGrowth$supp=='VC'])/sqrt(30)
tmp1 <- scale(rnorm(30))[,1]
tmp2 <- scale(rnorm(30))[,1]
tmp1 <- tmp1*s1*sqrt(30) + m1
tmp2 <- tmp2*s2*sqrt(30) + m2
sim.data.stats <- c( mean=mean( c(tmp1,tmp2) ),
sem = sd( c(tmp1,tmp2) )/sqrt( length( c(tmp1,tmp2))))
all.equal(full.data.stats, sim.data.stats)
568, 581, 595, 613, 633, 659, 688, 722, 764, 810)
y <- seq(from=0, to=840, by=70)
m <- length(y)
n <- length(x)
z <- t(matrix(rep(c(0,1), m*n/2), nrow=m))
image(x[-n], y[-m], z[-n,-m], col=c("black", "white"),
axes=FALSE, xlab="", ylab="")
x <- c(0, 70, 140, 208, 268, 324, 370, 404, 430, 450, 468,
482, 496, 506,516, 523, 528, 533, 536, 542, 549, 558,
568, 581, 595, 613, 633, 659, 688, 722, 764, 810)
y <- seq(from=0, to=840, by=70)
m <- length(y)
n <- length(x)
z <- t(matrix(rep(c(0,1), m*n/2), nrow=m))
image(x[-n], y[-m], z[-n,-m], col=c("black", "white"),
axes=FALSE, xlab="", ylab="")
clear
cls
rm(list=ls())
ls()
print ls()
print(ls())
install.packages("extrafont")
version
install.packages(c("ggmap", "ggplot2", "reshape2", "googleVis", "grid", "gridExtra", "gridGraphviz", "geoR", "geoRglm", "sp", "zoo", "xts", "MASS", "MCMCpack"))
install.packages(c("formatR", "gridSVG", "gstat", "knitr", "lattice", "latticeExtra", "LatticeKrig", "lubridate", "maptools", "munsell", "RandomFields", "Rcpp", "RgoogleMaps", "rjson", "RJSONIO", "rworldmap", "spacetime", "spam", "stringr"))
install.packages(c("gstat", "rggobi", "Rcpp", "RcppArmadillo", "glmnet", "nlme", "nlmrt", "ncdf", "mvtnorm", "sp"))
library(scatterplot3d)
library(gstat)
TCCZdata<-read.csv("TCCZ_nearF.csv")
setwd("D:/SRS/data_SRS/TCCZ_krig/R_work - Copy")
TCCZdata<-read.csv("TCCZ_nearF.csv")
View(TCCZdata)
TCCZdatac<-TCCZdata
TCCZdatac[TCCZdatac==0]<-NA
saveRDS(TCCZdatac, file = "TCCZ_o.rdata")
TCCZe<-readRDS("TCCZ_o.rdata")
scatterplot3d(x=TCCZe$UTM_N,y=TCCZe$UTM_E,z=TCCZe$TCCZ_top, type = "h",
xlab = "UTM Easting", ylab = "UTM Northing",
zlab = "Elevation TCCZ (ft)",
main = "F-area Elevation Data", angle=50)
summary(TCCZe)
main = "F-area Elevation Data", angle=30)
scatterplot3d(x=TCCZe$UTM_N,y=TCCZe$UTM_E,z=TCCZe$TCCZ_top, type = "h",
xlab = "UTM Easting", ylab = "UTM Northing",
zlab = "Elevation TCCZ (ft)",
main = "F-area Elevation Data", angle=30)
scatterplot3d(x=TCCZe$UTM_N,y=TCCZe$UTM_E,z=TCCZe$TCCZ_top, type = "h",
xlab = "UTM Easting", ylab = "UTM Northing",
zlab = "Elevation TCCZ (ft)",
main = "F-area Elevation Data", angle=80)
TCCZg<-TCCZe
TCCZe[,1]
View(TCCZg)
as.geodata(TCCZg, coords.col=2:3, data.col=5)
require(geoR)
as.geodata(TCCZg, coords.col=2:3, data.col=5)
TCCZg<-as.geodata(TCCZe, coords.col=2:3, data.col=5)
dup.coords(TCCZg)
TCCZdata<-read.csv("TCCZ_nearF.csv")
TCCZdatac<-TCCZdata
TCCZdatac[TCCZdatac==0]<-NA
saveRDS(TCCZdatac, file = "TCCZ_o.rdata")
rm(list=ls())
TCCZe<-readRDS("TCCZ_o.rdata")
TCCZg<-as.geodata(TCCZe, coords.col=2:3, data.col=5)
points(TCCZg, cex.min = 1, cex.max = 1, col = "gray")
